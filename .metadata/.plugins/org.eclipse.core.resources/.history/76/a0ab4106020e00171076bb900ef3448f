package communicater;

import gui.Gui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.lang.ref.WeakReference;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashSet;

import pc.PC;

public class Controller implements Runnable{
	int port;
	Sender sender = new Sender();
	HashSet<Thread> threads = new HashSet<Thread>();
	MyRunnable listen = new MyRunnable();
	HashSet<WeakReference<Reciever>>
	
	private ServerSocket ss;
	private Socket socket;
	
	public Controller(){
		this(1800);
		try {
			Gui.addPC(new PC("test from controller"), this.getClass());
		} catch (Exception e) {
			//Gui.displayException(e);
		}
	}

	public Controller(int port){
		this.port = port;
		try {
			ss = new ServerSocket(port);
		} catch (IOException e) {
			e.printStackTrace();
		}
		gui.Gui.log("Start a thread, listening on port:"+port);
		Thread t = new Thread(this);
		t.start();
	}
	
	//@Override
	public void run(){
			while (true){
				try{
					gui.Gui.log("Thread activated:" + Thread.currentThread().getId());
					socket = ss.accept();//本句阻塞！！！
					Reciever reciever = new Reciever(socket);
					WeakReference<Reciever> wf = new WeakReference<Reciever>(reciever);
					gui.Gui.log("Accept connection with port:"+socket.getPort()
							+"\n"+ "Now handled by Reciever num:" + reciever.toString());
				}
				catch(Exception e){
					e.printStackTrace();
				}
			}
	}
}

class MyRunnable implements Runnable{

	@Override
	public void run() {
		
	}
	
}